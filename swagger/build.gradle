buildscript {
    repositories {
        jcenter()
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'io.github.swagger2markup:swagger2markup-gradle-plugin:1.3.3'
        classpath "io.github.swagger2markup:swagger2markup:1.3.3"
        classpath "io.github.swagger2markup:swagger2markup-import-files-ext:1.3.3"

    }
}

plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
//    id 'org.asciidoctor.convert' version '2.4.0'
//    id 'org.ajoberstar.git-publish' version '2.1.3'
}
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'io.github.swagger2markup'

group = 'com.tutorial'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    jcenter()
    mavenCentral()
}

ext {
    asciiDocOutputDir = file("${buildDir}/asciidoc/generated")
    swaggerOutputDir = file("${buildDir}/swagger")
    snippetsOutputDir = file("${buildDir}/asciidoc/snippets")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.3.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.3.3.RELEASE'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-bean-validators', version: '2.9.2'
//    compile group: 'io.github.swagger2markup', name: 'swagger2markup', version: '1.3.3'


    compile group: 'org.flywaydb', name: 'flyway-core', version: '6.5.3'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile group: 'com.fasterxml.jackson.module', name: 'jackson-module-jsonSchema', version: '2.6.5'

    asciidoctor 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15'
}

test {
    useJUnitPlatform()
    systemProperty 'io.springfox.staticdocs.outputDir', swaggerOutputDir
    systemProperty 'io.springfox.staticdocs.snippetsOutputDir', snippetsOutputDir
}

convertSwagger2markup {
    dependsOn test
    swaggerInput "${swaggerOutputDir}/swagger.json"
    outputDir asciiDocOutputDir
    config = [
            'swagger2markup.pathsGroupedBy' : 'TAGS',
            'swagger2markup.extensions.springRestDocs.snippetBaseUri': snippetsOutputDir.getAbsolutePath()]
}

asciidoctorj {
    version = '1.5.5'
}


asciidoctor {
    dependsOn convertSwagger2markup
    sources {
        include 'index.adoc'
    }
    backends = ['html5', 'pdf']
    attributes = [
            doctype: 'book',
            toc: 'left',
            toclevels: '3',
            numbered: '',
            sectlinks: '',
            sectanchors: '',
            hardbreaks: '',
            generated: asciiDocOutputDir
    ]
}

//publishGhPages.dependsOn asciidoctor
//
//githubPages {
//    repoUri = 'https://github.com/Swagger2Markup/spring-swagger2markup-demo.git'
//
//    credentials {
//        username = project.hasProperty('githubUser') ? project.githubUser : System.getenv('GITHUB_USER')
//        password = project.hasProperty('githubPassword') ? project.githubPassword : System.getenv('GITHUB_PASSWORD')
//    }
//
//    pages {
//        from file(asciidoctor.outputDir.path + '/html5')
//        into project.version
//    }
//}

jar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    from ("${asciidoctor.outputDir}/pdf") {
        into 'static/docs'
    }
}
